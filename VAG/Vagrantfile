# -*- mode: ruby -*-
# vi: set ft=ruby :

BOX_IMAGE = "ubuntu/focal64"
DOMAIN = "aula104.local"
DNSIP = "192.148.1.100"
LAB = "bind9"

$dnsclient = <<-SHELL

  echo -e "nameserver $1\ndomain aula104.local">/etc/resolv.conf
SHELL

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.

  Vagrant.configure("2") do |config|
    # config general
    config.vm.box = BOX_IMAGE
  
    config.vm.provider "virtualbox" do |vb|
      vb.cpus = 1
      vb.memory = 1024
      vb.customize ["modifyvm", :id, "--groups", "/DNSLAB9"]
    end
  
    # dns 
    config.vm.define :dns do |guest|
      guest.vm.provider "virtualbox" do |vb, subconfig|
        vb.name = "dns"
        subconfig.vm.hostname = "dns.#{DOMAIN}"
        subconfig.vm.network :private_network, ip: DNSIP,  virtualboxintnet: LAB # ,  name: RED #
      end
      guest.vm.provision "shell", name: "dns-server", path: "enable-bind9.sh", args: DNSIP
    end
     # clients DHCP
     (1..1).each do |id|
      config.vm.define "client#{id}" do |guest|
        guest.vm.provider "virtualbox" do |vb, subconfig|
          vb.name = "client#{id}"
          subconfig.vm.hostname = "client#{id}.#{DOMAIN}"
  
          subconfig.vm.network :private_network, ip: "192.148.1.#{150+id}",  virtualboxintnet: LAB
        end
        guest.vm.provision "shell", name: "dns-client", inline: $dnsclient, args: DNSIP
        guest.vm.provision "shell", name: "testing", inline: <<-SHELL
          dig google.com +short
          dig -x 192.148.1.100 +short
          ping -a -c 1 apache1
          ping -a -c 1 apache2.aula104.local
          
          # curl apache1 --no-progress-meter 
          # curl apache2 --eno-progress-meter 
          # curl nginx --no-progress-meter 
          
          nslookup nginx 
          ping -a -c 1 amazon.com
          ping -a -c 1 ns1
        SHELL
      end
    end
  
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 3000

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  #------config.vm.network "private_network", ip: "192.168.33.10"
  

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
   #-----config.vm.synced_folder "C:\\\Users\\2daw3\\Santi\\VAG\\data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #---- config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  # ----   vb.memory = "1024"
  # ----   vb.name = "prueba"
  #--- end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.



# -----   config.vm.provision "shell", inline: <<-SHELL
# -----     apt-get update
# -----     apt-get install -y apache2
# -----     sudo apt-get install bind9 -y bind9utils bind9-doc
# -----   SHELL
#------ end

#nslookup apache2 